# Generated by Selenium IDE
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains



class TestUI():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_firsttrial(self, delay=0.5):
    # Test name: firsttrial
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://localhost:8077/")
    # 2 | setWindowSize | 1536x832 | 
    self.driver.set_window_size(1536, 832)
    time.sleep(delay)
    # 3 | click | css=.App-catButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-catButton").click()
    time.sleep(delay)
    # 4 | click | css=.App-catButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-catButton").click()
    time.sleep(delay)
    # 5 | click | css=.App-dogButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-dogButton").click()
    time.sleep(delay)
    # 6 | click | css=.App-dogButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-dogButton").click()
    time.sleep(delay)
    # 7 | click | css=.App-skipButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-skipButton").click()
    time.sleep(delay)
    # 8 | click | css=.App-skipButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-skipButton").click()
    time.sleep(delay)
    # 9 | click | css=.App-undoButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-undoButton").click()
    time.sleep(delay)
    # 10 | click | css=.App-dogButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-dogButton").click()
    time.sleep(delay)
    # 11 | click | css=.App-skipButton | 
    self.driver.find_element(By.CSS_SELECTOR, ".App-skipButton").click()
    time.sleep(delay)
    # 12 | doubleClick | css=.App-skipButton | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".App-skipButton")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    time.sleep(delay)
    print("DONE!")
  

